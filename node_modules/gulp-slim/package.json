{
  "_args": [
    [
      {
        "raw": "gulp-slim@0.3.0",
        "scope": null,
        "escapedName": "gulp-slim",
        "name": "gulp-slim",
        "rawSpec": "0.3.0",
        "spec": "0.3.0",
        "type": "version"
      },
      "/Users/rafik/GitHub/habibullin.github.io"
    ]
  ],
  "_from": "gulp-slim@0.3.0",
  "_id": "gulp-slim@0.3.0",
  "_inCache": true,
  "_location": "/gulp-slim",
  "_nodeVersion": "0.12.3",
  "_npmUser": {
    "name": "cognitom",
    "email": "kawamura@cognitom.com"
  },
  "_npmVersion": "2.9.1",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inherits": "2.0.3",
    "isarray": "0.0.1",
    "string_decoder": "0.10.31",
    "xtend": "4.0.1"
  },
  "_requested": {
    "raw": "gulp-slim@0.3.0",
    "scope": null,
    "escapedName": "gulp-slim",
    "name": "gulp-slim",
    "rawSpec": "0.3.0",
    "spec": "0.3.0",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-slim/-/gulp-slim-0.3.0.tgz",
  "_shasum": "0e518a029398b1475efcd5ccd9b3095d6046a198",
  "_shrinkwrap": null,
  "_spec": "gulp-slim@0.3.0",
  "_where": "/Users/rafik/GitHub/habibullin.github.io",
  "author": {
    "name": "Tsutomu Kawamura",
    "url": "http://librize.com/"
  },
  "bugs": {
    "url": "https://github.com/cognitom/gulp-slim/issues"
  },
  "contributors": [
    {
      "name": "Chang Wang",
      "url": "https://github.com/cheapsteak"
    },
    {
      "name": "Dominik Menke",
      "url": "https://github.com/dmke"
    },
    {
      "name": "yozzh",
      "url": "https://github.com/yozzh"
    }
  ],
  "dependencies": {
    "coffee-script": "^1.9.3",
    "gulp-util": "^3.0.6",
    "spawn-cmd": "0.0.2",
    "through2": "^0.6.5"
  },
  "description": "slim plugin for gulp",
  "devDependencies": {
    "gulp": "^3.9.0",
    "gulp-coffee": "^2.3.1",
    "mocha": "^2.2.5",
    "should": "^7.0.4"
  },
  "directories": {},
  "dist": {
    "shasum": "0e518a029398b1475efcd5ccd9b3095d6046a198",
    "tarball": "https://registry.npmjs.org/gulp-slim/-/gulp-slim-0.3.0.tgz"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "gitHead": "0db85f579977bcae0c886f0cf017d98621ef6ac3",
  "homepage": "https://github.com/cognitom/gulp-slim",
  "keywords": [
    "gulpplugin",
    "slim",
    "slim-lang",
    "template"
  ],
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "main": "./index.js",
  "maintainers": [
    {
      "name": "cognitom",
      "email": "cognitom@gmail.com"
    }
  ],
  "name": "gulp-slim",
  "optionalDependencies": {},
  "readme": "# gulp-slim [![Build Status](https://travis-ci.org/cognitom/gulp-slim.svg?branch=master)](https://travis-ci.org/cognitom/gulp-slim)\n\nA [Slim](http://slim-lang.com/) plugin for [gulp](https://github.com/wearefractal/gulp).\n\n## Install\n\nWe need Slim in version 3.0.2 or greater. If you don't have Slim installed,\nplease install Ruby (and RubyGems) first and run\n\n```bash\ngem install slim -v '>= 3.0.2'\n```\n\nIf you already have Slim installed, make sure you are using the latest version:\n\n```bash\ngem update slim\n```\n\nFinally, install `gulp-slim`:\n\n```bash\nnpm install gulp-slim --save-dev\n```\n\n## Usage\n\n```javascript\nvar gulp = require(\"gulp\");\nvar slim = require(\"gulp-slim\");\n\ngulp.task('slim', function(){\n  gulp.src(\"./src/slim/*.slim\")\n    .pipe(slim({\n      pretty: true\n    }))\n    .pipe(gulp.dest(\"./dist/html/\"));\n});\n```\n\nor write it in CoffeeScript.\n\n```coffeescript\ngulp = requier 'gulp'\nslim = require 'gulp-slim'\n\ngulp.task 'slim', ->\n  gulp.src './src/slim/*.slim'\n  .pipe slim pretty: true\n  .pipe gulp.dest './dist/html/'\n```\n\n\n## Options\n\nThe options are the same as what's supported by `slimrb`.\n\n- `pretty: true`\n- `erb: true`\n- `compile: true`\n- `rails: true`\n- `translator: true`\n- `logicLess: true`\n- `include: true`\n\nSet `bundler: true` to invoke `slimrb` via bundler.\n\nSet `chdir: true` to invoke `slimrb` in the same directory as the file currently being processed (for including files in the same directory).\n\nYou can require one of the [plug-ins](https://github.com/slim-template/slim/blob/master/README.md#plugins) available with Slim with the ```require``` key. Value can be ```string``` or ```array```.\n```javascript\nslim({\n  require: 'slim/include'\n  options: 'include_dirs=[\".\", \"common/includes\", \"./includes\"]'\n})\n\nslim({\n  require: ['slim/include', 'slim/logic_less']\n})\n```\nNote that when using slim/include you will likely need to use the 'include_dirs' option (as outlined above).  See the tests on how to configure include directories with the [inclulde partials plugin](https://github.com/slim-template/slim/blob/master/doc/include.md).\n\nYou can also add [custom options](https://github.com/slim-template/slim/blob/master/README.md#available-options) with ```options``` key. Value can be ```string``` or ```array```.\n\n```javascript\nslim({\n  pretty: true,\n  options: 'attr_quote=\"\\'\"'\n})\n\nslim({\n  pretty: true,\n  options: ['attr_quote=\"\\'\"', 'js_wrapper=:cdata']\n})\n\nslim({\n  include: true,\n  options: 'include_dirs=\"[\\'test/fixtures\\']\"'\n})\n```\nYou can also add any other console options for custom slimrb run options. For example:\n\n```javascript\nslim({\n  prerry: true,\n    environment: {\n      cwd: process.cwd(),\n      env: {\n        'LC_CTYPE':'ru_RU.UTF-8'\n      }\n\t}\n})\n```\n\n\n## Some Scenarios\n\n### With AngularJS\n\nIf you want to compile such a source.\n\n```slim\ndoctype html\nhtml ng-app=\"app\"\n  head\n  body ng-controller=\"YourController as ctrl\"\n    p {{ desc }}\n    p\n      | {{ something }}\n      a ng-href=\"https://github.com/{{ user }}\"\n\n```\n\nYou need to specify a `attr_list_delims`. (or `attr_delims` if you use slimrb previous to 2.1.0)\n\n```javascript\nvar gulp = require(\"gulp\");\nvar slim = require(\"gulp-slim\");\n\ngulp.task('slim', function(){\n  gulp.src(\"./src/slim/*.slim\")\n    .pipe(slim({\n      pretty: true,\n      options: \"attr_list_delims={'(' => ')', '[' => ']'}\"\n    }))\n    .pipe(gulp.dest(\"./dist/html/\"));\n});\n```\n\n\n### With Another Encoding\n\nFor example, if `slimrb`'s default is `US-ASCII` but you want to compile a source in `utf-8`, then use `encoding` option.\n\n```javascript\nvar gulp = require(\"gulp\");\nvar slim = require(\"gulp-slim\");\n\ngulp.task('slim', function(){\n  gulp.src(\"./src/slim/*.slim\")\n    .pipe(slim({\n      pretty: true,\n      options: \"encoding='utf-8'\"\n    }))\n    .pipe(gulp.dest(\"./dist/html/\"));\n});\n\n```\n\n### Passing Data into the Template\n\nSuppose you have the following template:\n\n```slim\ndoctype html\nhtml\n  head\n    title = title\n  body\n    h1 = title\n    ul\n      - for u in users\n        li = u.name\n```\n\nYou can fill in the variables by passing a plain old JavaScript object\nas `data` option into the `slim` plugin:\n\n```javascript\nslim({\n  data: {\n    title: \"Just a list of usernames\",\n    users: [\n      { name: \"Fred\" },\n      { name: \"Bill\" },\n      { name: \"Harry\" }\n    ]\n  }\n})\n```\n\n## Changelog\n\n### 0.3.0\n\n- add support slim require [#26](https://github.com/cognitom/gulp-slim/issues/26)\n\n### 0.2.0\n\n- add environment option for spawn process [#33](https://github.com/cognitom/gulp-slim/issues/33)\n\n### 0.1.0\n\nSpecial thanks to [@dmke](https://github.com/dmke) !! See [here](https://github.com/cognitom/gulp-slim/issues/20).\n\n- add `data` option to inject data into the template\n\n### 0.0.11\n\n- add logging of errors and fail if a compile error happens with slimrb\n\n### 0.0.8\n\n- support Windows\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/cognitom/gulp-slim.git"
  },
  "scripts": {
    "prepublish": "gulp coffee",
    "test": "mocha --compilers coffee:coffee-script/register -R spec"
  },
  "version": "0.3.0"
}
